"""Automatic migration

Revision ID: 31c27945e784
Revises: 
Create Date: 2023-07-22 19:03:46.203115

"""
import fastapi_users_db_sqlalchemy
import sqlalchemy as sa

from alembic import op


# revision identifiers, used by Alembic.
revision = '31c27945e784'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
                    sa.Column('id', sa.UUID(), server_default=sa.text(
                        'gen_random_uuid()'), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('roles',
                    sa.Column('id', sa.UUID(), server_default=sa.text(
                        'gen_random_uuid()'), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('tenants',
                    sa.Column('id', sa.UUID(), server_default=sa.text(
                        'gen_random_uuid()'), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('members',
                    sa.Column('oirst_name', sa.String(), nullable=False),
                    sa.Column('last_name', sa.String(), nullable=False),
                    sa.Column('tenant_id', sa.UUID(), nullable=True),
                    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(),
                              nullable=False),
                    sa.Column('email', sa.String(length=320), nullable=False),
                    sa.Column('hashed_password', sa.String(
                        length=1024), nullable=False),
                    sa.Column('is_active', sa.Boolean(), nullable=False),
                    sa.Column('is_superuser', sa.Boolean(), nullable=False),
                    sa.Column('is_verified', sa.Boolean(), nullable=False),
                    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_members_email'),
                    'members', ['email'], unique=True)
    op.create_table('role_permissions',
                    sa.Column('role_id', sa.UUID(), nullable=True),
                    sa.Column('permission_id', sa.UUID(), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['permission_id'], ['permissions.id'], ),
                    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], )
                    )
    op.create_table('teams',
                    sa.Column('id', sa.UUID(), server_default=sa.text(
                        'gen_random_uuid()'), nullable=False),
                    sa.Column('name', sa.String(), nullable=True),
                    sa.Column('tenant_id', sa.UUID(), nullable=True),
                    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_teams_name'), 'teams', ['name'], unique=True)
    op.create_table('oauth_account',
                    sa.Column('user_id', sa.UUID(), nullable=True),
                    sa.Column(
                        'id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
                    sa.Column('oauth_name', sa.String(
                        length=100), nullable=False),
                    sa.Column('access_token', sa.String(
                        length=1024), nullable=False),
                    sa.Column('expires_at', sa.Integer(), nullable=True),
                    sa.Column('refresh_token', sa.String(
                        length=1024), nullable=True),
                    sa.Column('account_id', sa.String(
                        length=320), nullable=False),
                    sa.Column('account_email', sa.String(
                        length=320), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['members.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_oauth_account_account_id'),
                    'oauth_account', ['account_id'], unique=False)
    op.create_index(op.f('ix_oauth_account_oauth_name'),
                    'oauth_account', ['oauth_name'], unique=False)
    op.create_table('team_members',
                    sa.Column('team_id', sa.UUID(), nullable=True),
                    sa.Column('member_id', sa.UUID(), nullable=True),
                    sa.ForeignKeyConstraint(['member_id'], ['members.id'], ),
                    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], )
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('team_members')
    op.drop_index(op.f('ix_oauth_account_oauth_name'),
                  table_name='oauth_account')
    op.drop_index(op.f('ix_oauth_account_account_id'),
                  table_name='oauth_account')
    op.drop_table('oauth_account')
    op.drop_index(op.f('ix_teams_name'), table_name='teams')
    op.drop_table('teams')
    op.drop_table('role_permissions')
    op.drop_index(op.f('ix_members_email'), table_name='members')
    op.drop_table('members')
    op.drop_table('tenants')
    op.drop_table('roles')
    op.drop_table('permissions')
    # ### end Alembic commands ###
